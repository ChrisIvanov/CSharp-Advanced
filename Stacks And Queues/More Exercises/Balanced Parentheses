using System;
using System.Collections.Generic;

namespace _08.BalancedParentheses
{
    class Program
    {
        static void Main(string[] args)
        {
            char[] input = Console.ReadLine().ToCharArray();

            Queue<char> openingQueue = new Queue<char>();
            Stack<char> closingStack = new Stack<char>();

            for (int i = 0; i < input.Length; i++)
            {
                if (input[i] == '[' || input[i] == '{' || input[i] == '(')
                {
                    openingQueue.Enqueue(input[i]);
                }
                else if(input[i] == ']' || input[i] == '}' || input[i] == ')')
                {
                    closingStack.Push(input[i]);
                }
            }

            bool isBalanced = true;
            if (openingQueue.Count != closingStack.Count)
            {
                Console.WriteLine("NO");
                return;
            }
            else
            {
                char[] openingBrackets = new char[openingQueue.Count];
                char[] closingBrackets = new char[closingStack.Count];
                int cycleLength = openingQueue.Count;

                for (int i = 0; i < cycleLength; i++)
                {
                    openingBrackets[i] = openingQueue.Dequeue();
                    closingBrackets[i] = closingStack.Pop();
                }

                for (int i = 0; i < cycleLength; i++)
                {
                    if (!((openingBrackets[i] == '{' && closingBrackets[i] == '}')
                        || (openingBrackets[i] == '[' && closingBrackets[i] == ']')
                        || (openingBrackets[i] == '(' && closingBrackets[i] == ')')))
                    {
                        isBalanced = false;
                        break;
                    }
                }
            }

            if (isBalanced)
            {
                Console.WriteLine("YES");
            }
            else
            {
                Console.WriteLine("NO");
            }
        }
    }
}

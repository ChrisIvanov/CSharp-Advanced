using System;
using System.Collections.Generic;
using System.Linq;

namespace _05.SnakeMoves
{
    class Program
    {
        static void Main(string[] args)
        {
            int[] dimentions = Console.ReadLine()
                .Split(" ", StringSplitOptions.RemoveEmptyEntries)
                 .Select(int.Parse).ToArray();

            int rows = dimentions[0];
            int cols = dimentions[1];
            char[,] matrix = new char[rows, cols];

            string snakeName = Console.ReadLine();
            int currentLetter = 0;
            for (int row = 0; row < rows; row++)
            {
                if (row % 2 ==0)
                {
                    for (int col = 0; col < cols; col++)
                    {
                        currentLetter = FillLetters(matrix, snakeName, currentLetter, row, col);
                    }
                }
                else
                {
                    for (int col = cols - 1; col >= 0; col--)
                    {
                        currentLetter = FillLettersBackwards(matrix, snakeName, currentLetter, row, col);
                    }
                } 
            }

            PrintMatrix(matrix);
        }

        private static int FillLettersBackwards(char[,] matrix, string snakeName, int currentLetter, int row, int col)
        {
            matrix[row, col] = snakeName[currentLetter];
            currentLetter++;
            if (currentLetter == snakeName.Length)
            {
                currentLetter = 0;
            }

            return currentLetter;
        }

        private static int FillLetters(char[,] matrix, string snakeName, int currentLetter, int row, int col)
        {
            matrix[row, col] = snakeName[currentLetter];
            currentLetter++;
            if (currentLetter == snakeName.Length)
            {
                currentLetter = 0;
            }

            return currentLetter;
        }

        static void PrintMatrix(char[,] matrix)
        {
            
            for (int row = 0; row < matrix.GetLength(0); row++)
            {
                for (int col = 0; col < matrix.GetLength(1); col++)
                {
                    Console.Write(matrix[row,col]);
                }
                Console.WriteLine();
            }
        }
    }
}
